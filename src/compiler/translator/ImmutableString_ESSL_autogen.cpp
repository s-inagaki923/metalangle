// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2021 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {25,   95,   164,  506, 88,   563,  1516, 1663, 96,   1266,
                              424,  689,  1637, 638, 976,  1223, 1378, 941,  94,   475,
                              1183, 428,  14,   556, 1697, 1146, 271,  847,  1338, 368,
                              63,   1479, 936,  904, 383,  848,  2};
constexpr int mangledkT2[] = {626,  932,  1250, 808,  416, 1305, 744,  1309, 708,  492,
                              1496, 1434, 809,  658,  797, 1054, 418,  1106, 773,  808,
                              710,  1158, 742,  334,  785, 1528, 1704, 1242, 1157, 532,
                              227,  1173, 979,  1050, 43,  988,  415};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    198,  0,    0,    0,    0,    0,    0,    1149, 0,    0,
    456,  706,  0,    1687, 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    793,  0,    0,    0,    0,    0,    343,  0,    164,  0,    0,    1040, 0,    0,    493,
    0,    0,    1418, 0,    0,    0,    0,    0,    0,    0,    0,    0,    1706, 1303, 0,    0,
    0,    0,    1103, 0,    0,    1639, 0,    0,    1314, 0,    0,    1183, 0,    0,    1290, 1141,
    1250, 0,    957,  0,    0,    0,    0,    0,    0,    0,    1048, 0,    1770, 0,    0,    103,
    0,    0,    1751, 0,    0,    0,    0,    792,  0,    0,    0,    387,  1547, 0,    13,   0,
    0,    0,    0,    0,    0,    1516, 0,    0,    0,    0,    917,  0,    138,  0,    0,    0,
    0,    0,    0,    0,    0,    0,    954,  0,    793,  915,  0,    0,    0,    0,    81,   0,
    1578, 0,    0,    594,  0,    202,  1737, 0,    0,    0,    0,    0,    1482, 0,    54,   401,
    1258, 248,  0,    0,    0,    574,  0,    1732, 27,   0,    0,    766,  810,  0,    0,    0,
    0,    427,  0,    0,    0,    1718, 455,  0,    753,  0,    0,    0,    0,    944,  0,    968,
    0,    1613, 0,    0,    616,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    1374, 0,    0,    13,   351,  0,    0,    0,    0,    0,    285,  0,    843,  400,  0,    1342,
    222,  780,  0,    0,    0,    0,    403,  0,    919,  0,    1769, 0,    0,    661,  0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    152,  410,  0,    336,  838,  0,    366,  403,
    0,    0,    0,    0,    1455, 466,  0,    1381, 886,  914,  896,  1292, 0,    46,   0,    0,
    958,  889,  927,  1532, 0,    0,    0,    607,  273,  690,  1546, 0,    0,    681,  0,    0,
    0,    0,    0,    1423, 645,  0,    0,    690,  847,  1309, 0,    0,    0,    804,  0,    0,
    0,    1153, 0,    625,  0,    0,    1417, 0,    0,    1560, 138,  798,  0,    0,    1022, 0,
    1702, 0,    1707, 1017, 0,    0,    0,    0,    0,    0,    0,    0,    1718, 0,    0,    0,
    0,    1207, 116,  0,    0,    756,  0,    413,  0,    456,  0,    1491, 0,    0,    0,    0,
    1355, 1018, 0,    0,    0,    392,  0,    0,    0,    0,    642,  823,  0,    0,    505,  838,
    0,    1113, 0,    0,    0,    0,    0,    496,  1185, 0,    462,  347,  1212, 1035, 1635, 0,
    0,    0,    0,    381,  0,    0,    484,  0,    0,    0,    0,    225,  0,    0,    0,    279,
    499,  568,  0,    1428, 0,    481,  749,  927,  1347, 0,    0,    0,    1724, 1077, 861,  827,
    1544, 0,    0,    0,    560,  0,    0,    0,    507,  319,  226,  1113, 733,  0,    0,    275,
    1181, 0,    214,  0,    0,    90,   0,    171,  405,  0,    828,  0,    0,    0,    356,  0,
    34,   0,    0,    1438, 1232, 0,    1722, 726,  0,    502,  0,    0,    0,    0,    0,    0,
    63,   71,   812,  442,  0,    0,    0,    0,    0,    0,    292,  962,  1764, 1311, 0,    1371,
    159,  0,    0,    0,    0,    0,    0,    0,    926,  1039, 1490, 1230, 0,    460,  1382, 1680,
    0,    732,  0,    1172, 0,    0,    1748, 0,    0,    0,    0,    1184, 0,    799,  1403, 119,
    563,  0,    1406, 285,  883,  0,    486,  10,   0,    681,  114,  1253, 1459, 0,    0,    0,
    209,  1028, 1338, 0,    0,    0,    0,    0,    1262, 0,    0,    0,    0,    1452, 0,    750,
    0,    0,    1342, 1081, 0,    1045, 0,    0,    0,    0,    617,  185,  0,    0,    353,  0,
    0,    404,  454,  1719, 194,  0,    164,  0,    0,    0,    0,    1560, 1339, 0,    0,    44,
    0,    767,  0,    0,    0,    0,    603,  0,    851,  762,  196,  854,  500,  809,  0,    0,
    1579, 155,  0,    493,  1620, 0,    0,    846,  1214, 0,    0,    1458, 810,  0,    160,  0,
    105,  523,  379,  1619, 0,    1164, 0,    0,    0,    0,    0,    0,    90,   0,    822,  0,
    0,    437,  0,    376,  339,  825,  679,  122,  1094, 0,    0,    0,    82,   488,  0,    896,
    0,    877,  297,  0,    0,    1556, 1764, 1211, 0,    482,  653,  704,  0,    0,    54,   1554,
    0,    0,    160,  0,    0,    0,    515,  0,    1136, 0,    1043, 0,    0,    1330, 1168, 0,
    1020, 0,    109,  0,    311,  0,    666,  691,  0,    0,    0,    0,    718,  1525, 0,    1132,
    0,    0,    187,  798,  1102, 0,    683,  0,    0,    420,  0,    0,    1427, 107,  0,    905,
    0,    1196, 0,    1358, 918,  0,    0,    49,   523,  282,  761,  1226, 1051, 0,    451,  0,
    1021, 700,  1659, 0,    0,    540,  455,  0,    881,  0,    0,    0,    1573, 0,    0,    0,
    0,    0,    0,    881,  0,    1547, 194,  0,    1151, 327,  70,   692,  0,    0,    0,    0,
    0,    900,  0,    441,  800,  0,    676,  637,  0,    0,    970,  402,  880,  318,  0,    0,
    0,    0,    1327, 0,    0,    0,    1752, 0,    0,    388,  312,  541,  425,  0,    1109, 0,
    594,  1737, 0,    1360, 48,   0,    1382, 492,  1134, 471,  1073, 548,  0,    0,    0,    0,
    0,    0,    1245, 0,    264,  0,    0,    937,  0,    130,  725,  0,    1237, 803,  451,  29,
    470,  694,  1583, 354,  0,    167,  520,  1516, 1110, 335,  191,  1489, 1540, 76,   824,  0,
    213,  1482, 0,    0,    1546, 0,    0,    394,  748,  450,  0,    259,  695,  0,    0,    534,
    244,  6,    635,  1722, 1085, 30,   1728, 884,  868,  0,    0,    207,  171,  1034, 293,  468,
    441,  1699, 1600, 1704, 40,   797,  67,   1302, 687,  555,  0,    1530, 788,  1765, 0,    506,
    313,  0,    1253, 1002, 498,  0,    0,    0,    93,   0,    0,    0,    0,    0,    1735, 0,
    0,    0,    659,  0,    835,  0,    0,    1477, 464,  772,  0,    0,    305,  197,  0,    0,
    249,  0,    0,    0,    226,  0,    604,  1291, 0,    541,  1213, 1208, 0,    0,    0,    83,
    548,  0,    0,    0,    9,    0,    124,  561,  0,    540,  446,  1089, 552,  0,    1401, 246,
    711,  1663, 823,  1128, 497,  776,  7,    444,  0,    439,  1515, 398,  710,  1111, 0,    517,
    0,    0,    883,  0,    649,  1071, 0,    380,  0,    0,    0,    0,    0,    1642, 113,  1473,
    15,   59,   0,    0,    702,  1587, 1517, 0,    671,  0,    0,    607,  0,    0,    0,    1487,
    0,    1615, 0,    1089, 0,    614,  286,  0,    863,  356,  0,    0,    445,  702,  428,  0,
    1,    1699, 0,    535,  0,    0,    0,    0,    36,   475,  0,    0,    0,    0,    673,  1351,
    0,    0,    522,  0,    547,  0,    0,    0,    0,    0,    891,  0,    0,    0,    294,  1766,
    225,  243,  584,  1031, 0,    1173, 539,  81,   317,  215,  0,    1072, 0,    0,    562,  0,
    0,    526,  128,  1186, 0,    0,    0,    0,    0,    0,    1726, 133,  0,    0,    0,    0,
    376,  585,  12,   196,  1672, 0,    0,    206,  200,  669,  6,    0,    100,  484,  652,  0,
    624,  0,    427,  1202, 0,    429,  235,  723,  0,    1656, 195,  862,  0,    0,    0,    0,
    1364, 0,    20,   0,    1297, 286,  1404, 850,  652,  87,   1322, 149,  0,    0,    113,  0,
    0,    0,    765,  333,  0,    0,    0,    389,  556,  639,  0,    1639, 1734, 1763, 1602, 718,
    0,    409,  0,    403,  1478, 0,    0,    479,  0,    853,  0,    0,    649,  1754, 1161, 1706,
    1186, 0,    620,  327,  0,    0,    970,  0,    95,   562,  0,    921,  0,    0,    0,    1686,
    1127, 75,   991,  0,    829,  830,  0,    122,  0,    787,  0,    1730, 0,    1009, 0,    689,
    0,    484,  0,    240,  644,  0,    0,    138,  106,  0,    0,    0,    530,  230,  390,  0,
    0,    1279, 0,    0,    0,    0,    0,    361,  401,  0,    1238, 89,   1446, 1603, 1133, 1067,
    731,  332,  644,  270,  734,  0,    1702, 1550, 0,    1542, 447,  742,  0,    0,    1516, 478,
    1691, 304,  0,    0,    0,    636,  0,    0,    221,  70,   0,    0,    372,  0,    493,  747,
    792,  0,    0,    295,  907,  1435, 940,  784,  0,    0,    392,  320,  1169, 0,    1272, 1203,
    844,  0,    0,    112,  0,    0,    1764, 0,    0,    1037, 0,    307,  0,    0,    0,    168,
    0,    1668, 0,    0,    168,  369,  0,    668,  0,    677,  559,  478,  0,    0,    0,    301,
    0,    516,  0,    884,  983,  0,    1019, 1356, 0,    897,  169,  1761, 436,  352,  24,   0,
    730,  1418, 0,    588,  0,    748,  466,  0,    0,    250,  0,    0,    567,  14,   0,    231,
    0,    0,    528,  0,    0,    0,    291,  1449, 1153, 1124, 723,  634,  0,    0,    0,    687,
    483,  44,   1240, 163,  158,  0,    1709, 1423, 431,  646,  587,  0,    1611, 444,  775,  0,
    288,  0,    0,    545,  0,    1747, 345,  0,    1328, 0,    251,  0,    639,  310,  1412, 0,
    0,    0,    0,    0,    666,  1325, 629,  1469, 682,  474,  237,  186,  18,   740,  762,  1534,
    1445, 0,    460,  0,    854,  1578, 459,  869,  398,  211,  808,  752,  0,    0,    0,    1042,
    936,  477,  0,    83,   116,  741,  773,  0,    0,    788,  697,  0,    10,   0,    685,  116,
    239,  426,  0,    87,   0,    0,    617,  454,  61,   0,    0,    0,    551,  192,  0,    803,
    329,  1481, 1284, 0,    381,  0,    569,  1091, 0,    0,    274,  76,   300,  970,  938,  0,
    0,    628,  0,    624,  0,    742,  1450, 942,  1205, 0,    557,  505,  654,  1732, 91,   254,
    0,    801,  0,    0,    0,    17,   0,    292,  47,   0,    1525, 1284, 570,  0,    344,  110,
    524,  1590, 0,    1043, 344,  1320, 688,  735,  0,    713,  232,  721,  0,    677,  0,    0,
    194,  746,  669,  183,  72,   1298, 0,    425,  1408, 374,  195,  0,    594,  619,  705,  1373,
    709,  45,   1424, 0,    0,    0,    876,  0,    0,    0,    0,    0,    699,  0,    1110, 915,
    992,  0,    0,    356,  36,   859,  564,  598,  1367, 0,    581,  0,    488,  0,    1062, 978,
    0,    0,    671,  0,    23,   1453, 179,  68,   842,  656,  1042, 467,  72,   335,  845,  487,
    0,    0,    205,  1575, 0,    1619, 0,    0,    1702, 304,  903,  0,    796,  0,    0,    1672,
    999,  1649, 651,  145,  0,    710,  928,  1200, 0,    0,    0,    455,  632,  140,  216,  392,
    0,    0,    0,    1282, 45,   1041, 811,  11,   191,  0,    0,    681,  234,  973,  0,    0,
    1646, 1661, 451,  278,  1664, 605,  0,    526,  794,  0,    0,    1685, 4,    363,  430,  0,
    0,    931,  5,    0,    792,  1743, 1635, 18,   489,  0,    0,    0,    1007, 1213, 834,  1335,
    468,  437,  657,  0,    0,    0,    1593, 109,  0,    0,    0,    1547, 539,  0,    218,  166,
    310,  35,   898,  409,  667,  143,  0,    0,    1607, 1495, 706,  26,   368,  0,    1208, 584,
    0,    1102, 101,  634,  25,   0,    0,    708,  188,  79,   317,  458,  612,  0,    1117, 72,
    571,  817,  0,    428,  924,  257,  0,    358,  0,    1284, 0,    553,  110,  1247, 1331, 0,
    0,    280,  0,    841,  189,  545,  0,    30,   78,   508,  0,    1085, 715,  0,    0,    0,
    0,    1733, 1475, 0,    947,  128,  552,  522,  813,  1167, 629,  0,    1709, 1568, 0,    0,
    561,  0,    1525, 302,  0,    1357, 0,    0,    847,  192,  295,  1712, 976,  0,    0,    311,
    385,  415,  0,    992,  203,  0,    492,  156,  0,    0,    1529};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1771;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1771;
}

constexpr int unmangledkT1[] = {234, 82,  236, 241, 204, 259, 135, 243, 176, 9,   126, 15,  233,
                                194, 122, 165, 120, 259, 187, 65,  109, 198, 164, 172, 198, 48};
constexpr int unmangledkT2[] = {89, 54, 249, 247, 226, 241, 94,  261, 73, 55,  26,  165, 206,
                                74, 12, 62,  286, 77,  258, 188, 149, 38, 141, 242, 244, 167};
constexpr int unmangledkG[]  = {
    0,   0,   0,   0,   0,   0,   76,  273, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   132, 231, 0,   75,  0,   0,   267, 24,  0,   0,   229, 0,   96,  0,   91,
    26,  109, 0,   225, 116, 0,   0,   167, 0,   170, 219, 0,   0,   0,   48,  0,   0,   0,
    0,   137, 134, 201, 0,   0,   0,   20,  110, 37,  0,   0,   0,   140, 0,   163, 0,   57,
    0,   0,   0,   0,   0,   0,   172, 0,   131, 247, 7,   0,   80,  0,   0,   198, 41,  79,
    229, 0,   91,  0,   107, 0,   105, 131, 0,   0,   206, 0,   0,   70,  0,   0,   0,   229,
    110, 32,  0,   0,   145, 78,  84,  0,   212, 140, 0,   98,  3,   19,  138, 62,  219, 243,
    86,  62,  155, 0,   0,   0,   0,   0,   78,  222, 127, 177, 194, 0,   0,   0,   0,   31,
    0,   22,  0,   0,   62,  0,   0,   64,  5,   93,  0,   0,   123, 145, 0,   12,  0,   279,
    0,   20,  149, 0,   0,   0,   0,   40,  35,  0,   253, 0,   171, 0,   0,   0,   31,  279,
    85,  281, 49,  73,  0,   51,  19,  51,  0,   89,  24,  0,   39,  0,   0,   273, 0,   0,
    0,   0,   216, 252, 32,  266, 42,  7,   0,   245, 69,  16,  0,   0,   82,  222, 43,  36,
    0,   0,   214, 128, 0,   27,  102, 101, 28,  37,  71,  279, 35,  0,   198, 0,   43,  267,
    0,   0,   0,   58,  0,   165, 224, 0,   0,   0,   29,  95,  0,   4,   0,   182, 228, 45,
    55,  0,   160, 0,   0,   71,  0,   270, 0,   0,   150, 4,   0,   0,   90,  94,  19,  2,
    23,  131, 0,   252, 24,  26,  0,   0,   0,   0,   228, 0,   0,   272, 35,  125, 146, 173};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 288;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 288;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
